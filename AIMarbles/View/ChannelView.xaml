<UserControl x:Class="AIMarbles.View.ChannelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behavior="clr-namespace:AIMarbles.Core.Behavior"
             xmlns:local="clr-namespace:AIMarbles.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:helper="clr-namespace:AIMarbles.Core.Helper"
             mc:Ignorable="d" 
             helper:ViewDimensionHelper.PassDimensionsToViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <!-- Style for the small increment/decrement buttons -->
        <Style x:Key="UpDownButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <materialDesign:Ripple Feedback="{TemplateBinding Foreground}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </materialDesign:Ripple>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesignBody}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MaterialDesignDarkTextFieldBoxBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPaper}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DropShadowEffect x:Key="ModuleDropShadow" BlurRadius="10" ShadowDepth="5" Opacity="0.2" Direction="270" Color="Black"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    </UserControl.Resources>

    <Border Background="{DynamicResource MaterialDesign.Brush.Primary.Dark.Foreground}"
            BorderBrush="{DynamicResource PrimaryHueMidBrush}"
            BorderThickness="1"
            CornerRadius="30" Padding="20"
            Effect="{StaticResource MaterialDesignShadowDepth2}">

        <Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!-- Title/Icon -->
                    <RowDefinition Height="Auto"/>
                    <!-- Note Input -->
                    <RowDefinition Height="Auto"/>
                    <!-- "Note" Label -->
                    <RowDefinition Height="Auto"/>
                    <!-- Separator -->
                    <RowDefinition Height="Auto"/>
                    <!-- Bottom Row (Link, Up/Down, Output) -->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Title Section -->
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,10" 
                            behavior:DragBehavior.IsDraggable="True"
                            HorizontalAlignment="Left">
                    <materialDesign:PackIcon Kind="MusicNote" VerticalAlignment="Center" Width="20" Height="20" Foreground="{DynamicResource MaterialDesign.Brush.Primary}"/>
                    <TextBlock Text="Channel" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
                </StackPanel>

                <!-- Note Input Section -->
                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Vertical" VerticalAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Center">
                    <Border CornerRadius="15" Background="{DynamicResource PrimaryHueLightBrush}" Padding="10 0">
                        <TextBox Text="{Binding ChannelValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                 FontSize="60" FontWeight="Thin"
                                 Width="100" Height="90"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                 CaretBrush="{DynamicResource PrimaryHueDarkBrush}"
                                 materialDesign:TextFieldAssist.HasClearButton="False"
                                 Style="{StaticResource MaterialDesignTextBox}"
                                 AcceptsReturn="False" 
                                 AcceptsTab="False"
                                 MaxLength="1"/>
                    </Border>
                </StackPanel>

                <!-- Channel Label -->
                <TextBlock Grid.Row="2" Grid.ColumnSpan="2" Text="Channel" HorizontalAlignment="Left" Margin="0,5,0,10" FontSize="10" Foreground="{DynamicResource MaterialDesignBody}"/>

                <!-- Separator -->
                <Separator Grid.Row="3" Grid.ColumnSpan="2" Margin="-20, 0, -20, 5"/>

                <!-- Bottom Row: Link, Up/Down, Output -->
                <Grid Grid.Row="4" Grid.ColumnSpan="2" Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <!-- Link Button -->
                        <ColumnDefinition Width="*"/>
                        <!-- Spacer / Up/Down Buttons -->
                        <ColumnDefinition Width="Auto"/>
                        <!-- Output Port -->
                    </Grid.ColumnDefinitions>

                    <!-- Link Button -->
                    <Button Content="Link" Grid.Column="0" Command="{Binding InitiateLinkCommand}" Style="{StaticResource MaterialDesignOutlinedButton}" />

                    <!-- Up/Down Buttons and Octave Offset -->
                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0">
                        <Button Style="{StaticResource UpDownButtonStyle}" Command="{Binding DecreaseOctaveCommand}">
                            <materialDesign:PackIcon Kind="ArrowDropDown" Width="20" Height="20"/>
                        </Button>
                        <Border Background="{DynamicResource MaterialDesignBackground}" 
                                CornerRadius="5" Padding="5 2" Margin="5 0"
                                BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1">
                            <TextBlock Text="{Binding OctaveOffset, StringFormat={}{0}}" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       FontWeight="SemiBold" FontSize="12"
                                       Foreground="{DynamicResource MaterialDesignBody}"/>
                        </Border>
                        <Button Style="{StaticResource UpDownButtonStyle}" Command="{Binding IncreaseOctaveCommand}">
                            <materialDesign:PackIcon Kind="ArrowDropUp" Width="20" Height="20"/>
                        </Button>
                    </StackPanel>

                    <!-- Output Port -->
                    <Border Grid.Column="2" Width="28" Height="28" CornerRadius="14" Background="{DynamicResource SecondaryHueMidBrush}" Margin="10,0,0,0"
                            ToolTipService.ToolTip="Note Output" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="LinkVariant" Width="18" Height="18" Foreground="{DynamicResource MaterialDesignBody}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </Grid>
            </Grid>

            <!-- Connection Overlay -->
            <Border Margin="-18" CornerRadius="28"
                    Visibility="{Binding IsConnectionModeActiveByType, Converter={StaticResource BooleanToVisibilityConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding RegisterLinkCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border.Background>
                    <SolidColorBrush Color="#6A1B9A" Opacity="0.9"/>
                </Border.Background>
                <Grid>
                    <materialDesign:PackIcon Kind="Link" Width="50" Height="50"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             Foreground="White"
                                             RenderTransformOrigin="0.5,0.5">
                    </materialDesign:PackIcon>
                </Grid>
            </Border>
        </Grid>
    </Border>
</UserControl>
